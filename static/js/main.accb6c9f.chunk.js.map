{"version":3,"sources":["logo.svg","components/onion-connisseur/ExplainButton.js","components/onion-connisseur/OnionConnoisseur.js","components/navbar/NavbarContainer.js","components/home/TTWord.js","components/home/AboutStack.js","components/home/IntroStack.js","components/home/Project.js","components/home/ProjectsStack.js","components/home/Home.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["ExplainButton","size","QuestionOutline","as","OnionConnoisseur","useState","enteredArticle","setEnteredArticle","loading","setLoading","result","setResult","spacing","align","ml","placeholder","w","onChange","e","target","value","justify","color","onClick","formData","FormData","append","axios","post","then","res","console","log","data","isLoading","loadingText","NavbarContainer","props","useColorMode","colorMode","toggleColorMode","borderWidth","borderColor","p","bg","direction","children","TTWord","label","AboutStackInner","ref","pt","flexDirection","borderRadius","shadow","textAlign","src","AboutStack","forwardRef","IntroStack","h","scrollTo","Project","title","ProjectsStack","columns","gap","Home","useRef","current","scrollIntoView","App","to","fontSize","display","Moon","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.accb6c9f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { IconButton } from '@chakra-ui/button'\r\nimport { QuestionOutlineIcon } from '@chakra-ui/icons'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport { Popover, PopoverArrow, PopoverBody, PopoverCloseButton, PopoverContent, PopoverHeader, PopoverTrigger } from '@chakra-ui/popover'\r\nimport React from 'react'\r\n\r\nexport default function ExplainButton() {\r\n    return (\r\n        <Popover>\r\n            <PopoverTrigger>\r\n                <IconButton size='small'><QuestionOutlineIcon /></IconButton>\r\n            </PopoverTrigger>\r\n            <PopoverContent>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverHeader as='b'>\r\n                    What is this?\r\n                </PopoverHeader>\r\n                <PopoverBody>\r\n                    <Text>This is a fun little program I created with my friend for our final project in SI 206 at the University of Michigan.</Text>\r\n                    <Text>We use a machine learning algorithm to determine if a provided article is likely to be satire. Try it below!</Text>\r\n                </PopoverBody>\r\n            </PopoverContent>\r\n        </Popover>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Box, Button, Center, Flex, Heading, Icon, PopoverTrigger, Spacer, Stack, Text, Textarea } from '@chakra-ui/react'\r\nimport { QuestionOutlineIcon } from '@chakra-ui/icons'\r\nimport ExplainButton from './ExplainButton'\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport { loadLayersModel } from '@tensorflow/tfjs'\r\nimport axios from 'axios'\r\n\r\nexport default function OnionConnoisseur() {\r\n    const [enteredArticle, setEnteredArticle] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [result, setResult] = useState(false);\r\n        \r\n    const onTextFieldChange = (e) => {\r\n        setEnteredArticle(e.target.value);\r\n    }\r\n\r\n    const predict = () => {\r\n        setLoading(true);\r\n        setResult(false);\r\n        let formData = new FormData();\r\n        formData.append('article-body', enteredArticle);\r\n        axios.post('https://onion-connisseur.herokuapp.com/', formData).then(res => {\r\n            console.log(res.data)\r\n            setLoading(false)\r\n            setResult(res.data);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <Center>\r\n            <Stack spacing={8} align='center'>\r\n                <Flex align='center'>\r\n                    <Heading>The Onion Connisseur</Heading>\r\n                    <Box ml={2}>\r\n                        <ExplainButton />\r\n                    </Box>\r\n                    </Flex>\r\n                <Textarea placeholder=\"Enter your article here\" w='100%' onChange={onTextFieldChange}></Textarea>\r\n                {\r\n                    (result) ? \r\n                    <Flex justify='center'><Text>Your article has been determined as {result < 0.5 ? <Text as='span' color='green'>real</Text> : <Text as='span' color='red'>fake</Text>} with a score of {result}.</Text></Flex>\r\n                    : ''\r\n                }\r\n                <Button w={'60%'} onClick={predict} isLoading={loading} loadingText=\"This will take a second!\">Is it satire?</Button>\r\n            </Stack>\r\n        </Center>\r\n    )\r\n}\r\n","import { useColorMode } from '@chakra-ui/color-mode'\r\nimport { Box, Flex, Stack } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nexport default function NavbarContainer(props) {\r\n    const { colorMode, toggleColorMode } = useColorMode()\r\n    return (\r\n        <Flex\r\n        as='nav'\r\n        justify='center'\r\n        w='100%'\r\n        borderWidth={1}\r\n        borderColor={colorMode === 'light'? 'gray.100' : 'gray.900'}\r\n        p={6}\r\n        bg={colorMode === 'light'? 'white' : 'blackAlpha.100'}\r\n        >\r\n            <Stack\r\n            w='60%'\r\n            direction='row'\r\n            spacing={12}\r\n            justify='space-evenly'\r\n            >\r\n            {props.children}\r\n            </Stack>\r\n        </Flex>\r\n    )\r\n}\r\n","import { Text } from '@chakra-ui/layout'\r\nimport { Tooltip } from '@chakra-ui/tooltip'\r\nimport React from 'react'\r\n\r\nexport default function TTWord(props) {\r\n    return (\r\n        <Tooltip label={props.children}><Text as='b' color='red.500'>{props.label}</Text></Tooltip>\r\n    )\r\n}\r\n","import { Image } from '@chakra-ui/image'\r\nimport { Box, Flex, Heading, Stack, Text } from '@chakra-ui/layout'\r\nimport React, { forwardRef } from 'react'\r\nimport TTWord from './TTWord'\r\n\r\nfunction AboutStackInner(props, ref) {\r\n    return (\r\n        <Flex\r\n        w={['100%', '70%', '50%', '40%']}\r\n        pt={24}\r\n        ref = {ref}\r\n        align='center'\r\n        flexDirection='column'\r\n        >\r\n            <Stack\r\n            borderWidth={1}\r\n            borderColor={'gray.100'}\r\n            p={4}\r\n            direction='column'\r\n            align='center'\r\n            borderRadius={16}\r\n            shadow=\"base\"\r\n            spacing={12}\r\n            >\r\n                <Heading textAlign='center'>Who am I?</Heading>\r\n                <Image borderRadius='full' src={process.env.PUBLIC_URL + '/me_cropped.png'} w={[40, 48, 64]}/>\r\n                <Text textAlign='center' as='b'>\r\n                    Hello! My name is Efe Akinci.\r\n                </Text>\r\n                <Text textAlign='center' as='p'>I am currently a senior at Skyline High School, and I am planning on majoring in <TTWord label=\"computer science\">and maybe also math? or perhaps dual major in cs and business? or maybe a minor in math and a dual-major in business and cs? is that even possible?</TTWord>. I work with a research team at Michigan Medicine to apply machine learning and other comptuer science concepts to rare-diseases.</Text>\r\n                <Text textAlign='center' as='p'>I also really enjoy doing robotics. In 2018-2019, I was the Engineering Projects lead for FIRST Robotics Team 6429 where I developed social media apps and websites, <TTWord label='scouting'>This is a thing in robotics where we collect data on other teams' robots to better choose teammates.</TTWord> programs, edited videos, and more. Our team has competed in <TTWord label=\"many competitions\"><ul><li>2018 Istanbul Off-Season - Winner</li><li>2019 Istanbul Regional - Engineering Inspiration</li><li>2019 Houston World Championship</li></ul></TTWord></Text>\r\n            </Stack>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nconst AboutStack = forwardRef(AboutStackInner);\r\n\r\nexport default AboutStack;\r\n","import { Button } from '@chakra-ui/button'\r\nimport { Stack, Text, Heading, Box, Flex } from '@chakra-ui/layout'\r\nimport { Tooltip } from '@chakra-ui/tooltip'\r\nimport React from 'react'\r\nimport TTWord from './TTWord'\r\n\r\nexport default function IntroStack(props) {\r\n    return (\r\n        <Flex h='85vh'>\r\n            <Stack w='100%' align='center' spacing={6}>\r\n                <Heading textAlign='center'>Hello!</Heading>\r\n                <Heading textAlign='center'>I love learning about computer science and <TTWord label=\"math\">but the words \"open set\" really, really scare me.</TTWord>!</Heading>\r\n                <Button textAlign='center' onClick={props.scrollTo}>Learn a bit about me!</Button>\r\n            </Stack>\r\n        </Flex>\r\n    )\r\n}\r\n","import { Heading, Stack, Text } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nexport default function Project(props) {\r\n    return (\r\n        <Stack\r\n        borderWidth={1}\r\n        borderColor={'gray.100'}\r\n        p={4}\r\n        direction='column'\r\n        align='center'\r\n        borderRadius={16}\r\n        shadow=\"base\"\r\n        spacing={12}\r\n        >\r\n            <Heading textAlign='center'>{props.title}</Heading>\r\n            <Text>{props.children}</Text>\r\n        </Stack>\r\n    )\r\n}\r\n","import { Heading, SimpleGrid, Stack } from '@chakra-ui/layout'\r\nimport { Box } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Project from './Project'\r\n\r\nexport default function ProjectsStack() {\r\n    return (\r\n        <Stack\r\n        direction='column'\r\n        align='center'\r\n        w='100%'\r\n        pt={24}\r\n        spacing={12}\r\n        >\r\n            <Heading>Projects</Heading>\r\n            <SimpleGrid columns={[1, 1, 3, 3]} gap={12}>\r\n                <Project title=\"Why is this empty?\">\r\n                    I am still working on this website!\r\n                </Project>\r\n                <Project title=\"Why is this empty?\">\r\n                    I am still working on this website!\r\n                </Project>\r\n                <Project title=\"Why is this empty?\">\r\n                    I am still working on this website!\r\n                </Project>\r\n            </SimpleGrid>\r\n        </Stack>\r\n    )\r\n}\r\n","import { Stack, Text, Heading, Box, Flex } from '@chakra-ui/layout'\r\nimport { Tooltip } from '@chakra-ui/tooltip'\r\nimport React, { useRef } from 'react'\r\nimport AboutStack from './AboutStack'\r\nimport IntroStack from './IntroStack'\r\nimport ProjectsStack from './ProjectsStack'\r\nimport TTWord from './TTWord'\r\n\r\nexport default function Home() {\r\n    let ref = useRef(null)\r\n    let scrollToElement = () => {\r\n        if (ref && ref.current) {\r\n            ref.current.scrollIntoView()    \r\n        }\r\n    }\r\n    return (\r\n        <Flex w='100%' justify='center'>\r\n            <Stack direction='column' w={['90%']} align='center'>\r\n                <IntroStack scrollTo={scrollToElement} />\r\n                <AboutStack ref={ref}/>\r\n                <ProjectsStack />\r\n            </Stack>\r\n        </Flex>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport OnionConnoisseur from './components/onion-connisseur/OnionConnoisseur';\nimport NavbarContainer from './components/navbar/NavbarContainer';\nimport React from 'react';\nimport { Box, Text } from '@chakra-ui/layout';\nimport Home from './components/home/Home';\nimport { IconButton } from '@chakra-ui/button';\nimport { MoonIcon } from '@chakra-ui/icons'\nimport { useColorMode } from '@chakra-ui/color-mode';\n\n\n\n\nfunction App() {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n    <Router>\n      <NavbarContainer>\n        <Link to='/'><Text as='b' fontSize='md' display='block'>Home</Text></Link>\n        <Link to='/onion_connoisseur'><Text as='b' fontSize='md' display='block'>Projects</Text></Link>\n        <Link to='/onion_connoisseur'><Text as='b' fontSize='md' display='block'>Contact</Text></Link>\n        <IconButton bg='transparent' onClick={toggleColorMode}><MoonIcon /></IconButton>\n      </NavbarContainer>\n      <Box w='100%' pt='15vh' />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/onion_connoisseur' component={OnionConnoisseur} />\n        </Switch>\n      </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\"\r\n\r\nconst config = {\r\n  initialColorMode: \"light\",\r\n  useSystemColorMode: false,\r\n}\r\n\r\nconst theme = extendTheme({ config })\r\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\"\nimport theme from './theme'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}