{"version":3,"sources":["logo.svg","components/onion-connisseur/ExplainButton.js","components/onion-connisseur/OnionConnoisseur.js","components/footer/Footer.js","components/home/TTWord.js","components/home/AboutStack.js","components/home/IntroStack.js","components/home/Project.js","components/home/ProjectsStack.js","components/home/Home.js","components/navbar/MobileDrawer.js","components/navbar/NavbarContainer.js","components/navbar/MobileNavbar.js","components/navbar/LargerNavbar.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["ExplainButton","size","QuestionOutline","as","OnionConnoisseur","useState","enteredArticle","setEnteredArticle","loading","setLoading","result","setResult","spacing","align","ml","placeholder","w","onChange","e","target","value","justify","color","onClick","formData","FormData","append","axios","post","then","res","console","log","data","isLoading","loadingText","Footer","useColorMode","colorMode","toggleColorMode","height","bg","borderWidth","borderColor","TTWord","props","label","children","AboutStackInner","ref","pt","flexDirection","p","direction","borderRadius","shadow","textAlign","src","AboutStack","forwardRef","IntroStack","h","scrollTo","Project","useCycle","open","toggleOpen","title","in","startingHeight","ProjectsStack","columns","gap","to","href","Home","useRef","current","scrollIntoView","NavbarLink","pb","borderBottomWidth","borderBlockEndColor","fontSize","display","MobileDrawer","isOpen","onClose","placement","alignItems","htmlFor","mb","id","isChecked","NavbarContainer","MobileNavbar","useDisclosure","onOpen","Hamburger","LargerNavbar","Moon","App","mobileNav","useMediaQuery","query","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.847de419.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { IconButton } from '@chakra-ui/button'\r\nimport { QuestionOutlineIcon } from '@chakra-ui/icons'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport { Popover, PopoverArrow, PopoverBody, PopoverCloseButton, PopoverContent, PopoverHeader, PopoverTrigger } from '@chakra-ui/popover'\r\nimport React from 'react'\r\n\r\nexport default function ExplainButton() {\r\n    return (\r\n        <Popover>\r\n            <PopoverTrigger>\r\n                <IconButton size='small'><QuestionOutlineIcon /></IconButton>\r\n            </PopoverTrigger>\r\n            <PopoverContent>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverHeader as='b'>\r\n                    What is this?\r\n                </PopoverHeader>\r\n                <PopoverBody>\r\n                    <Text>This is a fun little program I created with my friend for our final project in SI 206 at the University of Michigan.</Text>\r\n                    <Text>We use a machine learning algorithm to determine if a provided article is likely to be satire. Try it below!</Text>\r\n                </PopoverBody>\r\n            </PopoverContent>\r\n        </Popover>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Box, Button, Center, Flex, Heading, Icon, PopoverTrigger, Spacer, Stack, Text, Textarea } from '@chakra-ui/react'\r\nimport { QuestionOutlineIcon } from '@chakra-ui/icons'\r\nimport ExplainButton from './ExplainButton'\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport { loadLayersModel } from '@tensorflow/tfjs'\r\nimport axios from 'axios'\r\n\r\nexport default function OnionConnoisseur() {\r\n    const [enteredArticle, setEnteredArticle] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [result, setResult] = useState(false);\r\n        \r\n    const onTextFieldChange = (e) => {\r\n        setEnteredArticle(e.target.value);\r\n    }\r\n\r\n    const predict = () => {\r\n        setLoading(true);\r\n        setResult(false);\r\n        let formData = new FormData();\r\n        formData.append('article-body', enteredArticle);\r\n        axios.post('https://onion-connisseur.herokuapp.com/', formData).then(res => {\r\n            console.log(res.data)\r\n            setLoading(false)\r\n            setResult(res.data);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <Center>\r\n            <Stack spacing={8} align='center'>\r\n                <Flex align='center'>\r\n                    <Heading>The Onion Connisseur</Heading>\r\n                    <Box ml={2}>\r\n                        <ExplainButton />\r\n                    </Box>\r\n                    </Flex>\r\n                <Textarea placeholder=\"Enter your article here\" w='100%' onChange={onTextFieldChange}></Textarea>\r\n                {\r\n                    (result) ? \r\n                    <Flex justify='center'><Text>Your article has been determined as {result < 0.5 ? <Text as='span' color='green'>real</Text> : <Text as='span' color='red'>fake</Text>} with a score of {result}.</Text></Flex>\r\n                    : ''\r\n                }\r\n                <Button w={'60%'} onClick={predict} isLoading={loading} loadingText=\"This will take a second!\">Is it satire?</Button>\r\n            </Stack>\r\n        </Center>\r\n    )\r\n}\r\n","import { useColorMode } from '@chakra-ui/color-mode'\r\nimport { Stack } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nexport default function Footer() {\r\n    const {colorMode, toggleColorMode} = useColorMode();\r\n    return (\r\n        <Stack\r\n        height={32}\r\n        bg={colorMode === 'light' ? 'white' : 'gray.800'}\r\n        borderWidth={1}\r\n        borderColor={colorMode === 'light' ? 'gray.200' : 'gray.900'}\r\n        w='100%'>\r\n        </Stack>\r\n    )\r\n}\r\n","import { Text } from '@chakra-ui/layout'\r\nimport { Tooltip } from '@chakra-ui/tooltip'\r\nimport React from 'react'\r\n\r\nexport default function TTWord(props) {\r\n    return (\r\n        <Tooltip label={props.children}><Text as='b' color='red.500'>{props.label}</Text></Tooltip>\r\n    )\r\n}\r\n","import { Image } from '@chakra-ui/image'\r\nimport { Box, Flex, Heading, Stack, Text } from '@chakra-ui/layout'\r\nimport React, { forwardRef } from 'react'\r\nimport TTWord from './TTWord'\r\n\r\nfunction AboutStackInner(props, ref) {\r\n    return (\r\n        <Flex\r\n        w={['100%', '70%', '50%', '40%']}\r\n        pt={12}\r\n        ref = {ref}\r\n        align='center'\r\n        flexDirection='column'\r\n        >\r\n            <Stack\r\n            borderWidth={1}\r\n            borderColor={'gray.100'}\r\n            p={4}\r\n            direction='column'\r\n            align='center'\r\n            borderRadius={16}\r\n            shadow=\"base\"\r\n            spacing={12}\r\n            >\r\n                <Heading textAlign='center'>Who am I?</Heading>\r\n                <Image borderRadius='full' src={process.env.PUBLIC_URL + '/me_cropped.png'} w={[40, 48, 64]}/>\r\n                <Text textAlign='center' as='b'>\r\n                    Hello! My name is Efe Akinci.\r\n                </Text>\r\n                <Text textAlign='center' as='p'>I am currently a senior at Skyline High School, and I am planning on majoring in <TTWord label=\"computer science\">and maybe also math? or perhaps dual major in cs and business? or maybe a minor in math and a dual-major in business and cs? is that even possible?</TTWord>. I work with a research team at Michigan Medicine to apply machine learning and other comptuer science concepts to rare-diseases.</Text>\r\n                <Text textAlign='center' as='p'>I also really enjoy doing robotics. In 2018-2019, I was the Engineering Projects lead for FIRST Robotics Team 6429 where I developed social media apps and websites, <TTWord label='scouting'>This is a thing in robotics where we collect data on other teams' robots to better choose teammates.</TTWord> programs, edited videos, and more. Our team has competed in <TTWord label=\"many competitions\"><ul><li>2018 Istanbul Off-Season - Winner</li><li>2019 Istanbul Regional - Engineering Inspiration</li><li>2019 Houston World Championship</li></ul></TTWord>, and is still successfully competing today. After moving to the United States, I led a team to build another scouting application for Team 3322. However, the season was <TTWord label='cancelled'>:(</TTWord> due to COVID-19, and we were only able to <TTWord label='test'>It worked very well!</TTWord> the application in one event.</Text>\r\n            </Stack>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nconst AboutStack = forwardRef(AboutStackInner);\r\n\r\nexport default AboutStack;\r\n","import { Button } from '@chakra-ui/button'\r\nimport { Stack, Text, Heading, Box, Flex } from '@chakra-ui/layout'\r\nimport { Tooltip } from '@chakra-ui/tooltip'\r\nimport React from 'react'\r\nimport TTWord from './TTWord'\r\n\r\nexport default function IntroStack(props) {\r\n    return (\r\n        <Flex h='85vh'>\r\n            <Stack w='100%' align='center' spacing={6}>\r\n                <Heading textAlign='center'>Hello!</Heading>\r\n                <Heading textAlign='center'>I love learning about computer science and <TTWord label=\"math\">but the words \"open set\" really, really scare me.</TTWord>!</Heading>\r\n                <Button textAlign='center' onClick={props.scrollTo}>Learn a bit about me!</Button>\r\n            </Stack>\r\n        </Flex>\r\n    )\r\n}\r\n","import { Button } from '@chakra-ui/button'\r\nimport { Box, Heading, Stack, Text } from '@chakra-ui/layout'\r\nimport { Collapse } from '@chakra-ui/transition'\r\nimport { useCycle } from 'framer-motion'\r\nimport React, { useState } from 'react'\r\n\r\nexport default function Project(props) {\r\n    const [open, toggleOpen] = useCycle(false, true)\r\n\r\n    return (\r\n        <Box>\r\n            <Stack\r\n            borderWidth={1}\r\n            borderColor={'gray.100'}\r\n            p={4}\r\n            direction='column'\r\n            align='center'\r\n            borderRadius={16}\r\n            shadow=\"base\"\r\n            spacing={12}\r\n            >\r\n                <Heading textAlign='center'>{props.title}</Heading>\r\n                <Collapse in={open} startingHeight={96}>{props.children}</Collapse>\r\n                <Button onClick={toggleOpen}>{open ? \"Show Less\" : \"Show More\"}</Button>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n","import { Heading, Link as OutLink, SimpleGrid, Stack, Text } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport Project from './Project'\r\nimport { Link } from 'react-router-dom'\r\nimport { useColorMode } from '@chakra-ui/color-mode'\r\nimport { Button } from '@chakra-ui/button'\r\n\r\nexport default function ProjectsStack() {\r\n\r\n    let { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    return (\r\n        <Stack\r\n        direction='column'\r\n        align='center'\r\n        w='100%'\r\n        pt={24}\r\n        spacing={12}\r\n        >\r\n            <Heading>Projects</Heading>\r\n            <SimpleGrid columns={[1, 1, 3, 3]} gap={12}>\r\n                <Project title=\"Smart Mirror\">\r\n                    <Text>This is a smart mirror I made. I got inspiration from a YouTube video, but the parts in the video proved to be too expensive, and I did not have a 3D printer at the time to print the parts. So, I decided to see if I could build the mirror for less money and with fewer tools. The answer was yes! The mirror works by using a device that outputs to a recycled monitor behind the glass. The glass has a one-way mirror film on it to give the mirror effect. I manually cut all of the wood because I didn’t have electric tools, so some of the structure came out a bit uneven. This was my first real introduction to woodworking, and I think it came out good despite that. The software is a web page served by an Angular server and a Node.js backend. The backend also has Spotify integration. A Raspberry Pi works well as the video input, but anything that can display a webpage also works. In the end, the project helped me develop my woodworking and IOT skills, and I ended up with a pretty cool mirror.</Text>\r\n                </Project>\r\n                <Project title=\"COVID-19 Check In App\">\r\n                    <Text>This is a cross-platform app made in Flutter that allows for the delivery of customized forms in health settings. The project started when I was working with a medical research team at the University of Michigan. Due to the current pandemic, the team I worked with asked me to build a COVID-19 focused application to manage appointments. I used Flutter because it provided ease of development for cross-platform applications as well as fast rendering. I first started with a quick proof-of-concept app that I then built into an app with 3 main sections — login, appointments, and check-ins. In the end result, doctors will create access codes from a medical portal, with the patients entering said codes, and completing the check in. During check-ins, each answer can progress to the next question, ask another question, or switch to a different question set depending on the data from the backend. Our team then migrated to using the Responsiblue Health Check-In System.</Text>\r\n                </Project>\r\n                <Project title=\"Onion Connoisseur\">\r\n                    I created this project with my friend as our final project for SI 206 (Data-Oriented Programming) at the University of Michgian. The algorithm uses a neural network to determine wheter an article is satire or not. You can try this application out for yourself <Link to='/onion_connoisseur'><Text as='span' color= {colorMode === 'light' ? 'blue' : 'blue.200'}>here</Text></Link>. Additionally, you can find source code on our <OutLink color= {colorMode === 'light' ? 'blue' : 'blue.200'} href='https://github.com/efea-umich/SI-206-Final'>GitHub repository</OutLink> and more information on the project <OutLink color= {colorMode === 'light' ? 'blue' : 'blue.200'} href='https://github.com/efea-umich/SI-206-Final/raw/master/Final_Project_Report.pdf'> on our project report</OutLink>.\r\n                </Project>\r\n            </SimpleGrid>\r\n            <Link><Button>View more projects here!</Button></Link>\r\n        </Stack>\r\n    )\r\n}\r\n","import { Stack, Text, Heading, Box, Flex } from '@chakra-ui/layout'\r\nimport { Tooltip } from '@chakra-ui/tooltip'\r\nimport React, { useRef } from 'react'\r\nimport Footer from '../footer/Footer'\r\nimport AboutStack from './AboutStack'\r\nimport IntroStack from './IntroStack'\r\nimport ProjectsStack from './ProjectsStack'\r\nimport TTWord from './TTWord'\r\n\r\nexport default function Home() {\r\n    let ref = useRef(null)\r\n    let scrollToElement = () => {\r\n        if (ref && ref.current) {\r\n            ref.current.scrollIntoView()    \r\n        }\r\n    }\r\n    return (\r\n        <Stack w='100%' align='center' direction='column' spacing={16}>\r\n            <Stack direction='column' w={['90%']} align='center'>\r\n                <IntroStack scrollTo={scrollToElement} />\r\n                <AboutStack ref={ref}/>\r\n                <ProjectsStack />\r\n            </Stack>\r\n            <Footer />\r\n        </Stack>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Drawer,\r\n    DrawerBody,\r\n    DrawerFooter,\r\n    DrawerHeader,\r\n    DrawerOverlay,\r\n    DrawerContent,\r\n    DrawerCloseButton,\r\n    Button,\r\n    Text,\r\n    IconButton,\r\n    useColorMode,\r\n    Stack,\r\n    FormControl,\r\n    FormLabel,\r\n    Switch,\r\n    Box,\r\n  } from \"@chakra-ui/react\"\r\nimport { Link } from 'react-router-dom';\r\nimport { MoonIcon } from '@chakra-ui/icons';\r\n\r\nfunction NavbarLink(props) {\r\n    return (\r\n        <Box pb={2} borderBottomWidth={1} borderBlockEndColor='gray.100'><Link to={props.to}><Text as='b' fontSize='md' display='block'>{props.children}</Text></Link></Box>\r\n    )\r\n}\r\n\r\nexport default function MobileDrawer(props) {\r\n    let { isOpen, onClose } = props;\r\n    let { colorMode, toggleColorMode } = useColorMode();\r\n    return (\r\n        <Drawer isOpen={isOpen} onClose={onClose} placement=\"right\">\r\n            <DrawerOverlay>\r\n                <DrawerContent>\r\n                    <DrawerCloseButton onClick={onClose} />\r\n                    <DrawerHeader>Navigation Menu</DrawerHeader>\r\n\r\n                    <DrawerBody>\r\n                        <Stack direction='column' spacing={4}>\r\n                            <NavbarLink to='/'>Home</NavbarLink>\r\n                            <NavbarLink to='/onion_connoisseur'>Projects</NavbarLink>\r\n                            <NavbarLink to='/onion_connoisseur'>About</NavbarLink>\r\n                        </Stack>\r\n                    </DrawerBody>\r\n\r\n                    <DrawerFooter>\r\n                    <FormControl display=\"flex\" alignItems=\"center\">\r\n                            <FormLabel htmlFor=\"dark-mode\" mb=\"0\">\r\n                                Enable Dark Mode \r\n                            </FormLabel>\r\n                        <Switch id=\"dark-mode\" isChecked={colorMode === 'dark'} onChange={toggleColorMode}/>\r\n                    </FormControl>\r\n\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n                </DrawerOverlay>\r\n        </Drawer>\r\n    )\r\n}\r\n","import { useColorMode } from '@chakra-ui/color-mode'\r\nimport { Box, Flex, Stack } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nexport default function NavbarContainer(props) {\r\n    const { colorMode, toggleColorMode } = useColorMode()\r\n    return (\r\n        <Flex\r\n        as='nav'\r\n        justify='center'\r\n        w='100%'\r\n        borderWidth={1}\r\n        borderColor={colorMode === 'light'? 'gray.100' : 'gray.900'}\r\n        p={6}\r\n        bg={colorMode === 'light'? 'white' : 'blackAlpha.100'}\r\n        >\r\n            <Stack\r\n            w={props.w}\r\n            direction='row'\r\n            spacing={12}\r\n            justify={props.justify}\r\n            align='center'\r\n\r\n            >\r\n            {props.children}\r\n            </Stack>\r\n        </Flex>\r\n    )\r\n}\r\n","import { IconButton } from '@chakra-ui/button'\r\nimport { useColorMode } from '@chakra-ui/color-mode'\r\nimport { useDisclosure } from '@chakra-ui/hooks'\r\nimport { HamburgerIcon } from '@chakra-ui/icons'\r\nimport React from 'react'\r\nimport MobileDrawer from './MobileDrawer'\r\nimport NavbarContainer from './NavbarContainer'\r\n\r\nexport default function MobileNavbar() {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const { colorMode, toggleColorMode} = useColorMode()\r\n    return (\r\n        <NavbarContainer justify='flex-end' w='100%'>\r\n            <IconButton onClick={onOpen}><HamburgerIcon color={colorMode === 'light' ? 'black' : 'white'}/></IconButton>\r\n            <MobileDrawer isOpen = {isOpen} onClose={onClose} />\r\n        </NavbarContainer>\r\n    )\r\n}\r\n","import { MoonIcon } from '@chakra-ui/icons'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NavbarContainer from './NavbarContainer'\r\nimport { useColorMode } from '@chakra-ui/color-mode';\r\nimport { IconButton } from '@chakra-ui/button'\r\n\r\n\r\nexport default function LargerNavbar() {\r\n    const { colorMode, toggleColorMode } = useColorMode()\r\n\r\n    return (\r\n        <NavbarContainer justify='space-evenly' w='60%'>\r\n            <Link to='/'><Text as='b' fontSize='md' display='block'>Home</Text></Link>\r\n            <Link to='/onion_connoisseur'><Text as='b' fontSize='md' display='block'>Projects</Text></Link>\r\n            <Link to='/onion_connoisseur'><Text as='b' fontSize='md' display='block'>Contact</Text></Link>\r\n            <IconButton onClick={toggleColorMode} bg='transparent'><MoonIcon /></IconButton>\r\n      </NavbarContainer>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport OnionConnoisseur from './components/onion-connisseur/OnionConnoisseur';\n\nimport React, { useEffect } from 'react';\nimport { Box, Text } from '@chakra-ui/layout';\nimport Home from './components/home/Home';\n\nimport { useMediaQuery } from 'react-responsive'\nimport MobileNavbar from './components/navbar/MobileNavbar';\nimport LargerNavbar from './components/navbar/LargerNavbar';\n\n\n\nfunction App() {\n  const mobileNav = useMediaQuery({query: '(min-device-width: 48em)'})\n  return (\n    <Router>\n      {\n      mobileNav ? \n      <LargerNavbar w='75%' />\n      :\n      <MobileNavbar/>\n      }\n      <Box w='100%' pt='15vh' />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/onion_connoisseur' component={OnionConnoisseur} />\n        </Switch>\n      </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\"\r\n\r\nconst config = {\r\n  initialColorMode: \"light\",\r\n  useSystemColorMode: false,\r\n}\r\n\r\nconst theme = extendTheme({ config })\r\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\"\nimport theme from './theme'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}